{  
  "fileTypes":[  
    "hoc",
    "ses"
  ],
  "name":"Neuron",
  "patterns":[
    {
      "begin":"\/\/",
      "beginCaptures":[  
        {  
          "name":"comment.line.begin.neuron"
        }
      ],
      "end":"$\\n?",
      "endCaptures":[  
        {  
          "name":"comment.line.end.neuron"
        }
      ],
      "name":"comment.line.neuron"
    },
    {  
      "begin":"\/\\*",
      "beginCaptures":[  
        {  
          "name":"comment.block.begin.neuron"
        }
      ],
      "end":"(\\1)\\*\/\\s?",
      "endCaptures":[  
        {  
          "name":"comment.block.end.neuron"
        }
      ],
      "name":"comment.block.neuron"
    },
    {  
      "match":"(?<!\\.|\\w)([-+]?((\\d+(\\.)?\\d*)|(\\d*(\\.)?\\d+))([eE][-+]?[0-9]+)?)",
      "name":"constant.numeric.neuron"
    },
    {  
      "begin":"(\\\")",
      "beginCaptures":{  
        "1":{  
          "name":"string.begin.neuron"
        }
      },
      "end":"(\\\")",
      "endCaptures":{  
        "1":{  
          "name":"string.end.neuron"
        }
      },
      "name":"string.quoted.double.neuron",
      "patterns":[  
        {  
          "include":"#escaped_char"
        },
        {  
          "include":"#constant_placeholder"
        }
      ]
    },
    {  
      "begin":"(\\')",
      "beginCaptures":{  
        "1":{  
          "name":"string.begin.neuron"
        }
      },
      "end":"(\\')",
      "endCaptures":{  
        "1":{  
          "name":"string.end.neuron"
        }
      },
      "name":"string.quoted.single.neuron",
      "patterns":[  
        {  
          "include":"#escaped_char"
        },
        {  
          "include":"#constant_placeholder"
        }
      ]
    },
    {  
      "captures":{  
        "1":{  
          "name":"storage.type.function.neuron"
        },
        "2":{  
          "name":"entity.name.function.neuron"
        }
      },
      "match":"^\\s*(proc|func)\\s+([A-Za-z_][A-Za-z0-9_]*)\\s*\\(\\)"
    },
    {  
      "match":"\\b(PI|E|GAMMA|DEG|PHI|FARADAY|R)\\b",
      "name":"constant.numeric.neuron"
    },
    {  
      "match":"\\>|\\<|\\!|\\+|\\-|\\*|\\=|\\||\\&|\\^|\/|\/\/|\\%",
      "name":"keyword.operator.neuron"
    },
    {  
      "match":"\\b(proc|func|obfunc|print|delete|read|debug|double|em|depvar|eqn|local|localobj|strdef|parallel|help|iterator_statement|create|connect|setpointer|access|insert|uninsert|forall|ifsec|forsec|begintemplate|endtemplate|objectvar|objref|public|external|new)\\b",
      "name":"keyword.other.neuron"
    },
    {  
      "match":"\\b(return|break|continue|stop|if|else|while|for|iterator)\\b",
      "name":"keyword.control.neuron"
    },
    {  
      "match":"\\b(sin|cos|atan|tanh|log|log10|exp|sqrt|int|abs|erf|erfc|atan2|system|prmat|solve|eqinit|plt|axis|plot|plotx|ploty|regraph|symbols|printg|xred|sred|ropen|wopen|xopen|hoc_stdout|chdir|fprint|fscan|sscanf|sprint|graph|graphmode|fmenu|lw|getstr|strcmp|setcolor|startsw|stopsw|object_id|allobjectvars|allobjects|xpanel|xbutton|xcheckbox|xstatebutton|xlabel|xmenu|xvalue|xpvalue|xradiobutton|xfixedvalue|xvarlabel|xslider|boolean_dialog|continue_dialog|string_dialog|doEvents|doNotify|ivoc_style|numarg|argtype|hoc_pointer_|nrn_mallinfo|execute|execute1|load_proc|load_func|load_template|load_file|load_java|unix_mac_pc|show_winio|nrn_load_dll|machine_name|saveaudit|retrieveaudit|coredump_on_error|checkpoint|quit|object_push|object_pop|pwman_place|save_session|print_session|show_errmess_always|execerror|variable_domain|name_declared|use_mcell_ran4|mcell_ran4|mcell_ran4_init|numprocs|myproc|psync|settext|WinExec|secname|units|neuronhome|getcwd|nrnversion|object_pushed|load|pt3dadd)\\b",
      "name":"support.function.neuron"
    },
    {  
      "match":"\\b(hoc_ac_|float_epsilon|hoc_cross_x_|hoc_cross_y_|default_dll_loaded_)\\b",
      "name":"support.variable.neuron"
    },
    {  
      "match":"\\b(Deck|File|GUIMath|Glyph|Graph|HBox|List|Matrix|PWManager|Pointer|Random|StringFunctions|SymChooser|TextEditor|Timer|VBox|ValueFieldEditor|Vector)\\b",
      "name":"support.class.neuron"
    }
  ],
  "repository":{  
    "constant_placeholder":{  
      "match":"\\%(-)?([0-9])*(\\.[0-9]+)?(f|e|g|d|o|x|c|s)",
      "name":"constant.other.placeholder.neuron"
    },
    "escaped_char":{  
      "match":"\\\\b|\\\\f|\\\\n|\\\\r|\\\\t",
      "name":"constant.character.escape.neuron"
    }
  },
  "scopeName":"source.neuron",
  "uuid":"1abe2fa4-9b05-4f00-967b-34e8080124fe"
}